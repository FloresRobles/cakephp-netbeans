/*
 * ViewPathPanel.java
 *
 * Created on 2011/09/21
 */
package org.cakephp.netbeans.ui;

import java.util.Collection;
import javax.swing.JTextField;
import org.openide.filesystems.FileObject;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.util.Utilities;

/**
 *
 * @author junichi11
 */
public class ViewPathPanel extends javax.swing.JPanel implements LookupListener{

	private Lookup.Result result = null;
	/** Creates new form ViewPathPanel */
	public ViewPathPanel() {
		initComponents();
		addLookupListener();
	}
	
	private void addLookupListener(){
		result = Utilities.actionsGlobalContext().lookupResult(FileObject.class);
		result.addLookupListener(this);
	}

	public JTextField getViewPathField(){
		return viewPathField;
	}
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewPathLabel = new javax.swing.JLabel();
        viewPathField = new javax.swing.JTextField();

        viewPathLabel.setText(org.openide.util.NbBundle.getMessage(ViewPathPanel.class, "ViewPathPanel.viewPathLabel.text")); // NOI18N

        viewPathField.setEditable(false);
        viewPathField.setText(org.openide.util.NbBundle.getMessage(ViewPathPanel.class, "ViewPathPanel.viewPathField.text")); // NOI18N
        viewPathField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPathFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewPathLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewPathField, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewPathLabel)
                    .addComponent(viewPathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

	private void viewPathFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPathFieldActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_viewPathFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField viewPathField;
    private javax.swing.JLabel viewPathLabel;
    // End of variables declaration//GEN-END:variables

	public void resultChanged(LookupEvent lookupEvent) {
		Lookup.Result r = (Lookup.Result) lookupEvent.getSource();
		Collection c = r.allInstances();
		if(!c.isEmpty()){
			FileObject fo = (FileObject) c.iterator().next();
			viewPathField.setText(fo.getPath());
		}else{
			viewPathField.setText("");
		}
	}
}
