/*
 * CakePhpGoToViewActionPanel.java
 *
 * Created on 2011/10/06
 */
package org.cakephp.netbeans.ui.actions;

import java.awt.Dialog;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.filesystems.FileObject;

/**
 * @author junichi11
 */
public class CakePhpGoToViewActionPanel extends javax.swing.JPanel implements ActionListener{
	private static final long serialVersionUID = -3222403427049234267L;
	private DialogDescriptor dialogDescriptor;
	private Dialog dialog;
	private CakePhpGoToViewAction goToView;
	private Map<String, FileObject> themeMap = new HashMap<String, FileObject>();
	
	/** Creates new form CakePhpGoToViewActionPanel */
	public CakePhpGoToViewActionPanel(CakePhpGoToViewAction goToView) {
		initComponents();
		this.goToView = goToView;
		List<String> themeName = new ArrayList<String>();
		for(FileObject theme : this.goToView.getThemes()){
			if(theme.isFolder()){
				themeName.add(theme.getName());
				themeMap.put(theme.getName(), theme);
			}
		}
		
		themeList.setListData(themeName.toArray());
		themeList.setSelectedIndex(0);
		dialogDescriptor = new DialogDescriptor(this, "Select Theme", true, this);
	}

	public void showDialog(){
		dialog = DialogDisplayer.getDefault().createDialog(dialogDescriptor);
		dialog.setModal(true);
		dialog.pack();
		dialog.setVisible(true);
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        themeList = new javax.swing.JList();

        jScrollPane1.setViewportView(themeList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList themeList;
    // End of variables declaration//GEN-END:variables
	
	@Override
	public void actionPerformed(ActionEvent e) {
		if(e.getSource() == DialogDescriptor.OK_OPTION){
			String theme = (String)themeList.getSelectedValue();
			goToView.setTheme(themeMap.get(theme));
			goToView.goToView();
		}
	}
}
